{"ast":null,"code":"var _jsxFileName = \"/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx\";\nimport * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager';\nimport DropDown from '../../common/DropDown';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nimport { align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link } from 'suneditor/src/plugins';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WriteArticle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editorRef = /*#__PURE__*/React.createRef();\n\n    this.getSunEditorInstance = sunEditor => {\n      this.editorRef.current = sunEditor;\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getArticleTitles = this.getArticleTitles.bind(this);\n    this.saveArticle = this.saveArticle.bind(this);\n    this.changeDescription = this.changeDescription.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    this.state = {\n      articleTitles: [],\n      currentArticle: undefined\n    };\n  }\n\n  handleChange(content) {\n    console.log('OnChange: ', content);\n  }\n\n  getArticleTitles() {\n    var _this$editorRef$curre;\n\n    console.log(JSON.parse(JSON.stringify(contentManager.articles)));\n    this.setState({\n      articleTitles: []\n    });\n    contentManager.articles.forEach(article => {\n      this.setState({\n        articleTitles: [...this.state.articleTitles, article.title]\n      });\n    });\n    this.setState({\n      currentArticle: contentManager.articles[0]\n    });\n    (_this$editorRef$curre = this.editorRef.current) === null || _this$editorRef$curre === void 0 ? void 0 : _this$editorRef$curre.setContents(this.state.currentArticle ? this.state.currentArticle.data : '');\n  }\n\n  updatePublish() {}\n\n  saveArticle(e) {\n    var _this$editorRef$curre2;\n\n    e.preventDefault();\n    let currentArticle = this.state.currentArticle;\n    let content = (_this$editorRef$curre2 = this.editorRef.current) === null || _this$editorRef$curre2 === void 0 ? void 0 : _this$editorRef$curre2.getContents(true);\n\n    if (currentArticle && content) {\n      contentManager.modifyArticle(currentArticle.id, currentArticle.description, currentArticle.title, content);\n    }\n  }\n\n  changeTitle(e) {\n    if (this.state.currentArticle) {\n      this.state.currentArticle.title = e.target.value;\n    }\n  }\n\n  changeDescription(e) {\n    if (this.state.currentArticle) {\n      this.state.currentArticle.description = e.target.value;\n    }\n  }\n\n  componentDidMount() {\n    contentManager.addListener('article', this.getArticleTitles);\n  }\n\n  componentWillUnmount() {\n    contentManager.removeListener('article', this.getArticleTitles);\n  }\n\n  render() {\n    var _this$state$currentAr;\n\n    let loaded = !!contentManager.articles;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DropDown, {\n          options: this.state.articleTitles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: this.state.currentArticle ? this.state.currentArticle.title : 'Title',\n            onChange: this.changeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: this.state.currentArticle ? this.state.currentArticle.description : 'Description',\n            onChange: this.changeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"published\",\n              type: \"checkBox\",\n              onChange: this.updatePublish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.saveArticle,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SunEditor, {\n          autoFocus: true,\n          lang: \"en\",\n          setOptions: {\n            showPathLabel: false,\n            minHeight: '50vh',\n            maxHeight: '50vh',\n            placeholder: 'Your text here',\n            plugins: [align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link],\n            buttonList: [['undo', 'redo'], ['font', 'fontSize', 'formatBlock'], ['paragraphStyle'], ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'], ['fontColor', 'hiliteColor'], ['removeFormat'], '/', // Line break\n            ['outdent', 'indent'], ['align', 'horizontalRule', 'list', 'lineHeight'], ['table', 'link', 'image']],\n            formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n            font: ['Arial', 'Calibri', 'Comic Sans', 'Courier', 'Garamond', 'Georgia', 'Impact', 'Lucida Console', 'Palatino Linotype', 'Segoe UI', 'Tahoma', 'Times New Roman', 'Trebuchet MS']\n          },\n          onChange: this.handleChange,\n          getSunEditorInstance: this.getSunEditorInstance //                    defaultValue= {this.state.currentArticle ? this.state.currentArticle.data : \"<p>Your text here...</p>\"}\n          ,\n          defaultValue: (_this$state$currentAr = this.state.currentArticle) === null || _this$state$currentAr === void 0 ? void 0 : _this$state$currentAr.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : \"loading\"\n    }, void 0, false);\n  }\n\n}\n\nexport default WriteArticle;","map":{"version":3,"sources":["/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx"],"names":["React","contentManager","DropDown","SunEditor","align","font","fontColor","fontSize","formatBlock","hiliteColor","horizontalRule","lineHeight","list","paragraphStyle","table","template","textStyle","image","link","WriteArticle","Component","constructor","props","editorRef","createRef","getSunEditorInstance","sunEditor","current","componentDidMount","bind","getArticleTitles","saveArticle","changeDescription","changeTitle","state","articleTitles","currentArticle","undefined","handleChange","content","console","log","JSON","parse","stringify","articles","setState","forEach","article","title","setContents","data","updatePublish","e","preventDefault","getContents","modifyArticle","id","description","target","value","addListener","componentWillUnmount","removeListener","render","loaded","showPathLabel","minHeight","maxHeight","placeholder","plugins","buttonList","formats"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,iBAAP;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAIA;AACA;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,sCAAP,C,CAA+C;;AAC/C,SACIC,KADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,QAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,cAPJ,EAQIC,UARJ,EASIC,IATJ,EAUIC,cAVJ,EAWIC,KAXJ,EAYIC,QAZJ,EAaIC,SAbJ,EAcIC,KAdJ,EAeIC,IAfJ,QAgBO,uBAhBP;;;;AAyBA,MAAMC,YAAN,SAA2BnB,KAAK,CAACoB,SAAjC,CAAiF;AAG7EC,EAAAA,WAAW,CAACC,KAAD,EAA2B;AAClC,UAAMA,KAAN;AADkC,SAFtCC,SAEsC,gBAFavB,KAAK,CAACwB,SAAN,EAEb;;AAAA,SAatCC,oBAbsC,GAadC,SAAD,IAA8B;AACjD,WAAKH,SAAL,CAAeI,OAAf,GAAyBD,SAAzB;AACH,KAfqC;;AAElC,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKK,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,cAAc,EAAEC;AAFP,KAAb;AAIH;;AAMDC,EAAAA,YAAY,CAACC,OAAD,EAAkB;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,OAA1B;AACH;;AAEDT,EAAAA,gBAAgB,GAAG;AAAA;;AACfU,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe3C,cAAc,CAAC4C,QAA9B,CAAX,CAAZ;AACA,SAAKC,QAAL,CAAc;AAACX,MAAAA,aAAa,EAAE;AAAhB,KAAd;AACAlC,IAAAA,cAAc,CAAC4C,QAAf,CAAwBE,OAAxB,CAAgCC,OAAO,IAAI;AACvC,WAAKF,QAAL,CAAc;AAACX,QAAAA,aAAa,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,aAAf,EAA8Ba,OAAO,CAACC,KAAtC;AAAhB,OAAd;AACH,KAFD;AAIA,SAAKH,QAAL,CAAc;AAACV,MAAAA,cAAc,EAAEnC,cAAc,CAAC4C,QAAf,CAAwB,CAAxB;AAAjB,KAAd;AACA,kCAAKtB,SAAL,CAAeI,OAAf,gFAAwBuB,WAAxB,CAAoC,KAAKhB,KAAL,CAAWE,cAAX,GAA4B,KAAKF,KAAL,CAAWE,cAAX,CAA0Be,IAAtD,GAA6D,EAAjG;AACH;;AAEDC,EAAAA,aAAa,GAAG,CAAE;;AAElBrB,EAAAA,WAAW,CAACsB,CAAD,EAAS;AAAA;;AAChBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIlB,cAAc,GAAG,KAAKF,KAAL,CAAWE,cAAhC;AACA,QAAIG,OAAO,6BAAG,KAAKhB,SAAL,CAAeI,OAAlB,2DAAG,uBAAwB4B,WAAxB,CAAoC,IAApC,CAAd;;AACA,QAAGnB,cAAc,IAAIG,OAArB,EAA8B;AAC1BtC,MAAAA,cAAc,CAACuD,aAAf,CAA6BpB,cAAc,CAACqB,EAA5C,EAAgDrB,cAAc,CAACsB,WAA/D,EAA4EtB,cAAc,CAACa,KAA3F,EAAkGV,OAAlG;AACH;AACJ;;AAEDN,EAAAA,WAAW,CAACoB,CAAD,EAAS;AAChB,QAAI,KAAKnB,KAAL,CAAWE,cAAf,EAA+B;AAAC,WAAKF,KAAL,CAAWE,cAAX,CAA0Ba,KAA1B,GAAkCI,CAAC,CAACM,MAAF,CAASC,KAA3C;AAAiD;AACpF;;AAED5B,EAAAA,iBAAiB,CAACqB,CAAD,EAAS;AACtB,QAAI,KAAKnB,KAAL,CAAWE,cAAf,EAA+B;AAAC,WAAKF,KAAL,CAAWE,cAAX,CAA0BsB,WAA1B,GAAwCL,CAAC,CAACM,MAAF,CAASC,KAAjD;AAAuD;AAC1F;;AAEDhC,EAAAA,iBAAiB,GAAG;AAChB3B,IAAAA,cAAc,CAAC4D,WAAf,CAA2B,SAA3B,EAAsC,KAAK/B,gBAA3C;AACH;;AAEDgC,EAAAA,oBAAoB,GAAG;AACnB7D,IAAAA,cAAc,CAAC8D,cAAf,CAA8B,SAA9B,EAAyC,KAAKjC,gBAA9C;AACH;;AACDkC,EAAAA,MAAM,GAAG;AAAA;;AACL,QAAIC,MAAe,GAAG,CAAC,CAAChE,cAAc,CAAC4C,QAAvC;AACA,wBACI;AAAA,gBAEIoB,MAAM,gBACN;AAAA,gCACA,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,KAAK/B,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,cAAX,GAA4B,KAAKF,KAAL,CAAWE,cAAX,CAA0Ba,KAAtD,GAA8D,OAF/E;AAGI,YAAA,QAAQ,EAAE,KAAKhB;AAHnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,cAAX,GAA4B,KAAKF,KAAL,CAAWE,cAAX,CAA0BsB,WAAtD,GAAoE,aAFrF;AAGI,YAAA,QAAQ,EAAE,KAAK1B;AAHnB;AAAA;AAAA;AAAA;AAAA,kBANJ,eAWI;AAAA,iDAEI;AAAO,cAAA,IAAI,EAAC,WAAZ;AAAwB,cAAA,IAAI,EAAC,UAA7B;AAAwC,cAAA,QAAQ,EAAE,KAAKoB;AAAvD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAgBI;AAAQ,YAAA,OAAO,EAAE,KAAKrB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAoBA,QAAC,SAAD;AACI,UAAA,SAAS,EAAE,IADf;AAEI,UAAA,IAAI,EAAC,IAFT;AAGI,UAAA,UAAU,EAAE;AACRmC,YAAAA,aAAa,EAAE,KADP;AAERC,YAAAA,SAAS,EAAE,MAFH;AAGRC,YAAAA,SAAS,EAAE,MAHH;AAIRC,YAAAA,WAAW,EAAE,gBAJL;AAKRC,YAAAA,OAAO,EAAE,CACLlE,KADK,EAELC,IAFK,EAGLC,SAHK,EAILC,QAJK,EAKLC,WALK,EAMLC,WANK,EAOLC,cAPK,EAQLC,UARK,EASLC,IATK,EAULC,cAVK,EAWLC,KAXK,EAYLC,QAZK,EAaLC,SAbK,EAcLC,KAdK,EAeLC,IAfK,CALD;AAsBRqD,YAAAA,UAAU,EAAE,CACR,CAAC,MAAD,EAAS,MAAT,CADQ,EAER,CAAC,MAAD,EAAS,UAAT,EAAqB,aAArB,CAFQ,EAGR,CAAC,gBAAD,CAHQ,EAIR,CAAC,MAAD,EAAS,WAAT,EAAsB,QAAtB,EAAgC,QAAhC,EAA0C,WAA1C,EAAuD,aAAvD,CAJQ,EAKR,CAAC,WAAD,EAAc,aAAd,CALQ,EAMR,CAAC,cAAD,CANQ,EAOR,GAPQ,EAOH;AACL,aAAC,SAAD,EAAY,QAAZ,CARQ,EASR,CAAC,OAAD,EAAU,gBAAV,EAA4B,MAA5B,EAAoC,YAApC,CATQ,EAUR,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,CAVQ,CAtBJ;AAkCRC,YAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAlCD;AAmCRnE,YAAAA,IAAI,EAAE,CACF,OADE,EAEF,SAFE,EAGF,YAHE,EAIF,SAJE,EAKF,UALE,EAMF,SANE,EAOF,QAPE,EAQF,gBARE,EASF,mBATE,EAUF,UAVE,EAWF,QAXE,EAYF,iBAZE,EAaF,cAbE;AAnCE,WAHhB;AAsDI,UAAA,QAAQ,EAAE,KAAKiC,YAtDnB;AAuDI,UAAA,oBAAoB,EAAE,KAAKb,oBAvD/B,CAwDI;AAxDJ;AAyDI,UAAA,YAAY,2BAAE,KAAKS,KAAL,CAAWE,cAAb,0DAAE,sBAA2Be;AAzD7C;AAAA;AAAA;AAAA;AAAA,gBApBA;AAAA,sBADM,GAkFV;AApFA,qBADJ;AAyFH;;AAzJ4E;;AA4JjF,eAAehC,YAAf","sourcesContent":["import * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager';\nimport DropDown from '../../common/DropDown';\nimport {Article} from '../../../interfaces';\n\nimport firebase from 'firebase';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\n\nimport SunEditor from 'suneditor-react';\nimport SunEditorCore from 'suneditor/src/lib/core';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\nimport {\n    align,\n    font,\n    fontColor,\n    fontSize,\n    formatBlock,\n    hiliteColor,\n    horizontalRule,\n    lineHeight,\n    list,\n    paragraphStyle,\n    table,\n    template,\n    textStyle,\n    image,\n    link\n} from 'suneditor/src/plugins';\n\nexport interface WriteArticleProps {}\n\nexport interface WriteArticleState {\n    articleTitles: string[];\n    currentArticle: Article | undefined;\n}\n\nclass WriteArticle extends React.Component<WriteArticleProps, WriteArticleState> {\n    editorRef: React.RefObject<SunEditorCore | null> = React.createRef();\n\n    constructor(props: WriteArticleProps) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.getArticleTitles = this.getArticleTitles.bind(this);\n        this.saveArticle = this.saveArticle.bind(this);\n        this.changeDescription = this.changeDescription.bind(this);\n        this.changeTitle = this.changeTitle.bind(this);\n        this.state = {\n            articleTitles: [],\n            currentArticle: undefined\n        };\n    }\n\n    getSunEditorInstance = (sunEditor: SunEditorCore) => {\n        this.editorRef.current = sunEditor;\n    };\n\n    handleChange(content: string) {\n        console.log('OnChange: ', content);\n    }\n\n    getArticleTitles() {\n        console.log(JSON.parse(JSON.stringify(contentManager.articles)));\n        this.setState({articleTitles: []});\n        contentManager.articles.forEach(article => {\n            this.setState({articleTitles: [...this.state.articleTitles, article.title]});\n        });\n\n        this.setState({currentArticle: contentManager.articles[0]});\n        this.editorRef.current?.setContents(this.state.currentArticle ? this.state.currentArticle.data : '');\n    }\n\n    updatePublish() {}\n\n    saveArticle(e: any) {\n        e.preventDefault();\n\n        let currentArticle = this.state.currentArticle;\n        let content = this.editorRef.current?.getContents(true);\n        if(currentArticle && content) {\n            contentManager.modifyArticle(currentArticle.id, currentArticle.description, currentArticle.title, content)\n        }\n    }\n\n    changeTitle(e: any) {\n        if (this.state.currentArticle) {this.state.currentArticle.title = e.target.value}\n    }\n\n    changeDescription(e: any) {\n        if (this.state.currentArticle) {this.state.currentArticle.description = e.target.value}\n    }\n\n    componentDidMount() {\n        contentManager.addListener('article', this.getArticleTitles);\n    }\n\n    componentWillUnmount() {\n        contentManager.removeListener('article', this.getArticleTitles);\n    }\n    render() {\n        let loaded: boolean = !!contentManager.articles;\n        return ( \n            <>\n            {                    \n                loaded ? \n                <>\n                <DropDown options={this.state.articleTitles} />\n                <form>\n                    <input\n                        type='text'\n                        placeholder={this.state.currentArticle ? this.state.currentArticle.title : 'Title'}\n                        onChange={this.changeTitle}\n                    />\n                    <input\n                        type='text'\n                        placeholder={this.state.currentArticle ? this.state.currentArticle.description : 'Description'}\n                        onChange={this.changeDescription}\n                    />\n                    <label>\n                        published\n                        <input name='published' type='checkBox' onChange={this.updatePublish} />\n                    </label>\n\n                    <button onClick={this.saveArticle}>Save</button>\n                </form>\n                <SunEditor\n                    autoFocus={true}\n                    lang='en'\n                    setOptions={{\n                        showPathLabel: false,\n                        minHeight: '50vh',\n                        maxHeight: '50vh',\n                        placeholder: 'Your text here',\n                        plugins: [\n                            align,\n                            font,\n                            fontColor,\n                            fontSize,\n                            formatBlock,\n                            hiliteColor,\n                            horizontalRule,\n                            lineHeight,\n                            list,\n                            paragraphStyle,\n                            table,\n                            template,\n                            textStyle,\n                            image,\n                            link\n                        ],\n                        buttonList: [\n                            ['undo', 'redo'],\n                            ['font', 'fontSize', 'formatBlock'],\n                            ['paragraphStyle'],\n                            ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n                            ['fontColor', 'hiliteColor'],\n                            ['removeFormat'],\n                            '/', // Line break\n                            ['outdent', 'indent'],\n                            ['align', 'horizontalRule', 'list', 'lineHeight'],\n                            ['table', 'link', 'image']\n                        ],\n                        formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n                        font: [\n                            'Arial',\n                            'Calibri',\n                            'Comic Sans',\n                            'Courier',\n                            'Garamond',\n                            'Georgia',\n                            'Impact',\n                            'Lucida Console',\n                            'Palatino Linotype',\n                            'Segoe UI',\n                            'Tahoma',\n                            'Times New Roman',\n                            'Trebuchet MS'\n                        ]\n                    }}\n                    onChange={this.handleChange}\n                    getSunEditorInstance={this.getSunEditorInstance}\n                    //                    defaultValue= {this.state.currentArticle ? this.state.currentArticle.data : \"<p>Your text here...</p>\"}\n                    defaultValue={this.state.currentArticle?.data}\n                />\n            </>\n            :\n            \"loading\"\n            }\n        </>\n        );\n    }\n}\n\nexport default WriteArticle;\n"]},"metadata":{},"sourceType":"module"}