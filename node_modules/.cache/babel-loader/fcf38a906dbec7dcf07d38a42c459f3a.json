{"ast":null,"code":"var _jsxFileName = \"/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx\";\nimport * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager';\nimport DropDown from '../../common/DropDown';\nimport Loading from '../../common/Loading';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nimport { align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link } from 'suneditor/src/plugins';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WriteArticle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editorRef = /*#__PURE__*/React.createRef();\n\n    this.getSunEditorInstance = sunEditor => {\n      this.editorRef.current = sunEditor;\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getArticleTitles = this.getArticleTitles.bind(this);\n    this.saveArticle = this.saveArticle.bind(this);\n    this.changeDescription = this.changeDescription.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    this.state = {\n      articleTitles: [],\n      currentArticle: {}\n    };\n  }\n\n  handleChange(content) {\n    console.log('OnChange: ', content);\n  }\n\n  getArticleTitles() {\n    var _this$editorRef$curre;\n\n    console.log(JSON.parse(JSON.stringify(contentManager.articles)), this.props.match.params);\n    this.setState({\n      articleTitles: contentManager.articles.map(article => article.title),\n      currentArticle: contentManager.articles.find(article => article.id === this.props.match.params.id) || {}\n    });\n    (_this$editorRef$curre = this.editorRef.current) === null || _this$editorRef$curre === void 0 ? void 0 : _this$editorRef$curre.setContents(this.state.currentArticle.data || \"\");\n  }\n\n  updatePublish() {}\n\n  saveArticle(e) {\n    var _this$editorRef$curre2;\n\n    e.preventDefault();\n    let currentArticle = this.state.currentArticle;\n    let content = ((_this$editorRef$curre2 = this.editorRef.current) === null || _this$editorRef$curre2 === void 0 ? void 0 : _this$editorRef$curre2.getContents(true)) || \"\";\n\n    if (currentArticle) {\n      if (currentArticle.id) {\n        contentManager.modifyArticle(currentArticle.id, currentArticle.description || \"\", currentArticle.title || \"\", content);\n      } else {\n        contentManager.createArticle(currentArticle.description || \"\", currentArticle.title || \"\", content);\n      }\n    }\n  }\n\n  changeTitle(e) {\n    if (this.state.currentArticle) {\n      this.state.currentArticle.title = e.target.value;\n    }\n  }\n\n  changeDescription(e) {\n    if (this.state.currentArticle) {\n      this.state.currentArticle.description = e.target.value;\n    }\n  }\n\n  componentDidMount() {\n    contentManager.addListener('article', this.getArticleTitles);\n  }\n\n  componentWillUnmount() {\n    contentManager.removeListener('article', this.getArticleTitles);\n  }\n\n  render() {\n    var _this$state$currentAr;\n\n    let showEditor = !!this.state.currentArticle.id || !this.props.match.params.id;\n    let dropDownItems = contentManager.articles.map(article => ({\n      text: article.title,\n      callback: () => this.props.history.push(\"/write/\" + article.id)\n    }));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showEditor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DropDown, {\n          options: dropDownItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: !this.props.match.params.id ? \"Creating new article\" : \"Updating \\\"\" + this.state.currentArticle.title + \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: this.state.currentArticle ? this.state.currentArticle.title : 'Title',\n            onChange: this.changeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: this.state.currentArticle ? this.state.currentArticle.description : 'Description',\n            onChange: this.changeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"published\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"published\",\n              type: \"checkBox\",\n              onChange: this.updatePublish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.saveArticle,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SunEditor, {\n          autoFocus: true,\n          lang: \"en\",\n          setOptions: {\n            showPathLabel: false,\n            minHeight: '50vh',\n            maxHeight: '50vh',\n            placeholder: 'Your text here',\n            plugins: [align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link],\n            buttonList: [['undo', 'redo'], ['font', 'fontSize', 'formatBlock'], ['paragraphStyle'], ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'], ['fontColor', 'hiliteColor'], ['removeFormat'], '/', // Line break\n            ['outdent', 'indent'], ['align', 'horizontalRule', 'list', 'lineHeight'], ['table', 'link', 'image']],\n            formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n            font: ['Arial', 'Calibri', 'Comic Sans', 'Courier', 'Garamond', 'Georgia', 'Impact', 'Lucida Console', 'Palatino Linotype', 'Segoe UI', 'Tahoma', 'Times New Roman', 'Trebuchet MS']\n          },\n          onChange: this.handleChange,\n          getSunEditorInstance: this.getSunEditorInstance //                    defaultValue= {this.state.currentArticle ? this.state.currentArticle.data : \"<p>Your text here...</p>\"}\n          ,\n          defaultValue: (_this$state$currentAr = this.state.currentArticle) === null || _this$state$currentAr === void 0 ? void 0 : _this$state$currentAr.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default WriteArticle;","map":{"version":3,"sources":["/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx"],"names":["React","contentManager","DropDown","Loading","SunEditor","align","font","fontColor","fontSize","formatBlock","hiliteColor","horizontalRule","lineHeight","list","paragraphStyle","table","template","textStyle","image","link","WriteArticle","Component","constructor","props","editorRef","createRef","getSunEditorInstance","sunEditor","current","componentDidMount","bind","getArticleTitles","saveArticle","changeDescription","changeTitle","state","articleTitles","currentArticle","handleChange","content","console","log","JSON","parse","stringify","articles","match","params","setState","map","article","title","find","id","setContents","data","updatePublish","e","preventDefault","getContents","modifyArticle","description","createArticle","target","value","addListener","componentWillUnmount","removeListener","render","showEditor","dropDownItems","text","callback","history","push","showPathLabel","minHeight","maxHeight","placeholder","plugins","buttonList","formats"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager';\nimport DropDown, { DropDownItem } from '../../common/DropDown';\nimport {Article} from '../../../interfaces';\nimport Loading from '../../common/Loading';\nimport {RouteComponentProps} from 'react-router-dom';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\n\nimport SunEditor from 'suneditor-react';\nimport SunEditorCore from 'suneditor/src/lib/core';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\nimport {\n    align,\n    font,\n    fontColor,\n    fontSize,\n    formatBlock,\n    hiliteColor,\n    horizontalRule,\n    lineHeight,\n    list,\n    paragraphStyle,\n    table,\n    template,\n    textStyle,\n    image,\n    link\n} from 'suneditor/src/plugins';\n\nexport interface WriteArticlePropsMatchParams {\n    id?: string;\n}\n\nexport interface WriteArticleProps extends RouteComponentProps<WriteArticlePropsMatchParams> {}\n\nexport interface WriteArticleState {\n    articleTitles: string[];\n    currentArticle: Partial<Article>;\n}\n\nclass WriteArticle extends React.Component<WriteArticleProps, WriteArticleState> {\n    editorRef: React.RefObject<SunEditorCore | null> = React.createRef();\n\n    constructor(props: WriteArticleProps) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.getArticleTitles = this.getArticleTitles.bind(this);\n        this.saveArticle = this.saveArticle.bind(this);\n        this.changeDescription = this.changeDescription.bind(this);\n        this.changeTitle = this.changeTitle.bind(this);\n        this.state = {\n            articleTitles: [],\n            currentArticle: {}\n        };\n    }\n\n    getSunEditorInstance = (sunEditor: SunEditorCore) => {\n        this.editorRef.current = sunEditor;\n    };\n\n    handleChange(content: string) {\n        console.log('OnChange: ', content);\n    }\n\n    getArticleTitles() {\n        console.log(JSON.parse(JSON.stringify(contentManager.articles)), this.props.match.params);\n        this.setState({\n            articleTitles: contentManager.articles.map(article => article.title),\n            currentArticle: contentManager.articles.find(article => article.id === this.props.match.params.id) || {}\n        });\n\n        this.editorRef.current?.setContents(this.state.currentArticle.data || \"\");\n    }\n\n    updatePublish() {}\n\n    saveArticle(e: React.FormEvent) {\n        e.preventDefault();\n\n        let currentArticle = this.state.currentArticle;\n        let content = this.editorRef.current?.getContents(true) || \"\";\n        if(currentArticle) {\n            if (currentArticle.id) {\n                contentManager.modifyArticle(currentArticle.id, currentArticle.description || \"\", currentArticle.title || \"\", content);\n            }else {\n                contentManager.createArticle(currentArticle.description || \"\", currentArticle.title || \"\", content);\n            }  \n        }\n    }\n\n    changeTitle(e: React.ChangeEvent<HTMLInputElement>) {\n        if (this.state.currentArticle) {\n            this.state.currentArticle.title = e.target.value;\n        }\n    }\n\n    changeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n        if (this.state.currentArticle) {\n            this.state.currentArticle.description = e.target.value;\n        }\n    }\n\n    componentDidMount() {\n        contentManager.addListener('article', this.getArticleTitles);\n    }\n\n    componentWillUnmount() {\n        contentManager.removeListener('article', this.getArticleTitles);\n    }\n    render() {\n        let showEditor: boolean = !!this.state.currentArticle.id || !this.props.match.params.id;\n        let dropDownItems: DropDownItem[] = contentManager.articles.map(article => ({text: article.title, callback: () => this.props.history.push(\"/write/\" + article.id)}))\n        return (\n            <>\n                {showEditor ? (\n                    <>\n                        <DropDown options={dropDownItems} />\n                        <form>\n                            <h1>{!this.props.match.params.id ? \"Creating new article\" : \"Updating \\\"\" + this.state.currentArticle.title + \"\\\"\"}</h1>\n                            <input\n                                type='text'\n                                placeholder={this.state.currentArticle ? this.state.currentArticle.title : 'Title'}\n                                onChange={this.changeTitle}\n                            />\n                            <input\n                                type='text'\n                                placeholder={\n                                    this.state.currentArticle ? this.state.currentArticle.description : 'Description'\n                                }\n                                onChange={this.changeDescription}\n                            />\n                            <label>\n                                published\n                                <input name='published' type='checkBox' onChange={this.updatePublish} />\n                            </label>\n\n                            <button onClick={this.saveArticle}>Save</button>\n                        </form>\n                        <SunEditor\n                            autoFocus={true}\n                            lang='en'\n                            setOptions={{\n                                showPathLabel: false,\n                                minHeight: '50vh',\n                                maxHeight: '50vh',\n                                placeholder: 'Your text here',\n                                plugins: [\n                                    align,\n                                    font,\n                                    fontColor,\n                                    fontSize,\n                                    formatBlock,\n                                    hiliteColor,\n                                    horizontalRule,\n                                    lineHeight,\n                                    list,\n                                    paragraphStyle,\n                                    table,\n                                    template,\n                                    textStyle,\n                                    image,\n                                    link\n                                ],\n                                buttonList: [\n                                    ['undo', 'redo'],\n                                    ['font', 'fontSize', 'formatBlock'],\n                                    ['paragraphStyle'],\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n                                    ['fontColor', 'hiliteColor'],\n                                    ['removeFormat'],\n                                    '/', // Line break\n                                    ['outdent', 'indent'],\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\n                                    ['table', 'link', 'image']\n                                ],\n                                formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n                                font: [\n                                    'Arial',\n                                    'Calibri',\n                                    'Comic Sans',\n                                    'Courier',\n                                    'Garamond',\n                                    'Georgia',\n                                    'Impact',\n                                    'Lucida Console',\n                                    'Palatino Linotype',\n                                    'Segoe UI',\n                                    'Tahoma',\n                                    'Times New Roman',\n                                    'Trebuchet MS'\n                                ]\n                            }}\n                            onChange={this.handleChange}\n                            getSunEditorInstance={this.getSunEditorInstance}\n                            //                    defaultValue= {this.state.currentArticle ? this.state.currentArticle.data : \"<p>Your text here...</p>\"}\n                            defaultValue={this.state.currentArticle?.data}\n                        />\n                    </>\n                ) : (\n                    <Loading />\n                )}\n            </>\n        );\n    }\n}\n\nexport default WriteArticle;\n"]},"metadata":{},"sourceType":"module"}