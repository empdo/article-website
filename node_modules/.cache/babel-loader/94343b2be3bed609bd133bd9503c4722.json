{"ast":null,"code":"var _jsxFileName = \"/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx\";\nimport * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager';\nimport DropDown from '../../common/DropDown';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nimport { align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link } from 'suneditor/src/plugins';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WriteArticle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editorRef = /*#__PURE__*/React.createRef();\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getArticleTitles = this.getArticleTitles.bind(this);\n    this.state = {\n      articleTitles: [],\n      currentArticle: undefined\n    };\n  }\n\n  handleChange(content) {\n    console.log(\"OnChange: \", content);\n  }\n\n  getArticleTitles() {\n    console.log(JSON.parse(JSON.stringify(contentManager.articles)));\n    this.setState({\n      articleTitles: []\n    });\n    contentManager.articles.forEach(article => {\n      this.setState({\n        articleTitles: [...this.state.articleTitles, article.title]\n      });\n    });\n    this.setState({\n      currentArticle: contentManager.articles[0]\n    });\n  }\n\n  componentDidMount() {\n    contentManager.addListener('article', this.getArticleTitles);\n  }\n\n  componentWillUnmount() {\n    contentManager.removeListener('article', this.getArticleTitles);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DropDown, {\n        options: this.state.articleTitles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: this.state.currentArticle ? this.state.currentArticle.title : \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: this.state.currentArticle ? this.state.currentArticle.description : \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SunEditor, {\n        autoFocus: true,\n        lang: \"en\",\n        setOptions: {\n          showPathLabel: false,\n          minHeight: '50vh',\n          maxHeight: '50vh',\n          placeholder: this.state.currentArticle ? this.state.currentArticle.data : \"\",\n          plugins: [align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link],\n          buttonList: [['undo', 'redo'], ['font', 'fontSize', 'formatBlock'], ['paragraphStyle'], ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'], ['fontColor', 'hiliteColor'], ['removeFormat'], \"/\", // Line break\n          ['outdent', 'indent'], ['align', 'horizontalRule', 'list', 'lineHeight'], ['table', 'link', 'image']],\n          formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n          font: ['Arial', 'Calibri', 'Comic Sans', 'Courier', 'Garamond', 'Georgia', 'Impact', 'Lucida Console', 'Palatino Linotype', 'Segoe UI', 'Tahoma', 'Times New Roman', 'Trebuchet MS']\n        },\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default WriteArticle;","map":{"version":3,"sources":["/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx"],"names":["React","contentManager","DropDown","SunEditor","align","font","fontColor","fontSize","formatBlock","hiliteColor","horizontalRule","lineHeight","list","paragraphStyle","table","template","textStyle","image","link","WriteArticle","Component","constructor","props","editorRef","createRef","componentDidMount","bind","getArticleTitles","state","articleTitles","currentArticle","undefined","handleChange","content","console","log","JSON","parse","stringify","articles","setState","forEach","article","title","addListener","componentWillUnmount","removeListener","render","description","showPathLabel","minHeight","maxHeight","placeholder","data","plugins","buttonList","formats"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,iBAAP;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA;AACA;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,sCAAP,C,CAA+C;;AAC/C,SACIC,KADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,QAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOIC,cAPJ,EAQIC,UARJ,EASIC,IATJ,EAUIC,cAVJ,EAWIC,KAXJ,EAYIC,QAZJ,EAaIC,SAbJ,EAcIC,KAdJ,EAeIC,IAfJ,QAgBO,uBAhBP;;;;AAyBA,MAAMC,YAAN,SAA2BnB,KAAK,CAACoB,SAAjC,CAAiF;AAG7EC,EAAAA,WAAW,CAACC,KAAD,EAA2B;AAClC,UAAMA,KAAN;AADkC,SAFtCC,SAEsC,gBAFMvB,KAAK,CAACwB,SAAN,EAEN;AAElC,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,cAAc,EAAEC;AAFP,KAAb;AAIH;;AAEDC,EAAAA,YAAY,CAACC,OAAD,EAAmB;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,OAA1B;AACH;;AAEDN,EAAAA,gBAAgB,GAAG;AACfO,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAerC,cAAc,CAACsC,QAA9B,CAAX,CAAZ;AACA,SAAKC,QAAL,CAAc;AAACX,MAAAA,aAAa,EAAE;AAAhB,KAAd;AACA5B,IAAAA,cAAc,CAACsC,QAAf,CAAwBE,OAAxB,CAAgCC,OAAO,IAAI;AACvC,WAAKF,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,aAAf,EAA8Ba,OAAO,CAACC,KAAtC;AAAjB,OAAd;AACH,KAFD;AAIA,SAAKH,QAAL,CAAc;AAACV,MAAAA,cAAc,EAAG7B,cAAc,CAACsC,QAAf,CAAwB,CAAxB;AAAlB,KAAd;AAEH;;AAEDd,EAAAA,iBAAiB,GAAG;AAChBxB,IAAAA,cAAc,CAAC2C,WAAf,CAA2B,SAA3B,EAAsC,KAAKjB,gBAA3C;AACH;;AAEDkB,EAAAA,oBAAoB,GAAG;AACnB5C,IAAAA,cAAc,CAAC6C,cAAf,CAA8B,SAA9B,EAAyC,KAAKnB,gBAA9C;AACH;;AACDoB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,cAAX,GAA4B,KAAKF,KAAL,CAAWE,cAAX,CAA0Ba,KAAtD,GAA8D;AAA9F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWE,cAAX,GAA4B,KAAKF,KAAL,CAAWE,cAAX,CAA0BkB,WAAtD,GAAoE;AAApG;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,SAAD;AACI,QAAA,SAAS,EAAE,IADf;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,UAAU,EAAE;AACRC,UAAAA,aAAa,EAAE,KADP;AAERC,UAAAA,SAAS,EAAE,MAFH;AAGRC,UAAAA,SAAS,EAAE,MAHH;AAIRC,UAAAA,WAAW,EAAE,KAAKxB,KAAL,CAAWE,cAAX,GAA4B,KAAKF,KAAL,CAAWE,cAAX,CAA0BuB,IAAtD,GAA6D,EAJlE;AAKRC,UAAAA,OAAO,EAAE,CACLlD,KADK,EAELC,IAFK,EAGLC,SAHK,EAILC,QAJK,EAKLC,WALK,EAMLC,WANK,EAOLC,cAPK,EAQLC,UARK,EASLC,IATK,EAULC,cAVK,EAWLC,KAXK,EAYLC,QAZK,EAaLC,SAbK,EAcLC,KAdK,EAeLC,IAfK,CALD;AAsBRqC,UAAAA,UAAU,EAAE,CACR,CAAC,MAAD,EAAS,MAAT,CADQ,EAER,CAAC,MAAD,EAAS,UAAT,EAAqB,aAArB,CAFQ,EAGR,CAAC,gBAAD,CAHQ,EAIR,CAAC,MAAD,EAAS,WAAT,EAAsB,QAAtB,EAAgC,QAAhC,EAA0C,WAA1C,EAAuD,aAAvD,CAJQ,EAKR,CAAC,WAAD,EAAc,aAAd,CALQ,EAMR,CAAC,cAAD,CANQ,EAOR,GAPQ,EAOH;AACL,WAAC,SAAD,EAAY,QAAZ,CARQ,EASR,CAAC,OAAD,EAAU,gBAAV,EAA4B,MAA5B,EAAoC,YAApC,CATQ,EAUR,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,CAVQ,CAtBJ;AAkCRC,UAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAlCD;AAmCRnD,UAAAA,IAAI,EAAE,CACF,OADE,EAEF,SAFE,EAGF,YAHE,EAIF,SAJE,EAKF,UALE,EAMF,SANE,EAOF,QAPE,EAQF,gBARE,EASF,mBATE,EAUF,UAVE,EAWF,QAXE,EAYF,iBAZE,EAaF,cAbE;AAnCE,SAHhB;AAqDO,QAAA,QAAQ,EAAE,KAAK2B;AArDtB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADJ;AA8DH;;AAnG4E;;AAsGjF,eAAeb,YAAf","sourcesContent":["import * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager'\nimport DropDown from '../../common/DropDown'\nimport {Article} from '../../../interfaces';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\n\nimport SunEditor from 'suneditor-react';\nimport SunEditorCore from 'suneditor/src/lib/core';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\nimport {\n    align,\n    font,\n    fontColor,\n    fontSize,\n    formatBlock,\n    hiliteColor,\n    horizontalRule,\n    lineHeight,\n    list,\n    paragraphStyle,\n    table,\n    template,\n    textStyle,\n    image,\n    link\n} from 'suneditor/src/plugins';\n\nexport interface WriteArticleProps {}\n\nexport interface WriteArticleState {\n    articleTitles : string[];\n    currentArticle : Article | undefined;\n}\n\nclass WriteArticle extends React.Component<WriteArticleProps, WriteArticleState> {\n    editorRef: React.RefObject<SunEditorCore> = React.createRef();\n\n    constructor(props: WriteArticleProps) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.getArticleTitles = this.getArticleTitles.bind(this);\n        this.state = {\n            articleTitles: [],\n            currentArticle: undefined,\n        };\n    }\n\n    handleChange(content : string) {\n        console.log(\"OnChange: \", content);\n    }\n\n    getArticleTitles() {\n        console.log(JSON.parse(JSON.stringify(contentManager.articles)));\n        this.setState({articleTitles: []});\n        contentManager.articles.forEach(article => {\n            this.setState({ articleTitles: [...this.state.articleTitles, article.title] })\n        });\n\n        this.setState({currentArticle : contentManager.articles[0]})\n\n    }\n\n    componentDidMount() {\n        contentManager.addListener('article', this.getArticleTitles);\n    }\n\n    componentWillUnmount() {\n        contentManager.removeListener('article', this.getArticleTitles);\n    }\n    render() {\n        \n        return (\n            <>\n                <DropDown options={this.state.articleTitles}/>\n                <input type=\"text\" placeholder={this.state.currentArticle ? this.state.currentArticle.title : \"Title\"}/>\n                <input type=\"text\" placeholder={this.state.currentArticle ? this.state.currentArticle.description : \"Description\"}/>\n                <SunEditor\n                    autoFocus={true}\n                    lang='en'\n                    setOptions={{\n                        showPathLabel: false,\n                        minHeight: '50vh',\n                        maxHeight: '50vh',\n                        placeholder: this.state.currentArticle ? this.state.currentArticle.data : \"\",\n                        plugins: [\n                            align,\n                            font,\n                            fontColor,\n                            fontSize,\n                            formatBlock,\n                            hiliteColor,\n                            horizontalRule,\n                            lineHeight,\n                            list,\n                            paragraphStyle,\n                            table,\n                            template,\n                            textStyle,\n                            image,\n                            link\n                        ],\n                        buttonList: [\n                            ['undo', 'redo'],\n                            ['font', 'fontSize', 'formatBlock'],\n                            ['paragraphStyle'],\n                            ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n                            ['fontColor', 'hiliteColor'],\n                            ['removeFormat'],\n                            \"/\", // Line break\n                            ['outdent', 'indent'],\n                            ['align', 'horizontalRule', 'list', 'lineHeight'],\n                            ['table', 'link', 'image']\n                        ],\n                        formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n                        font: [\n                            'Arial',\n                            'Calibri',\n                            'Comic Sans',\n                            'Courier',\n                            'Garamond',\n                            'Georgia',\n                            'Impact',\n                            'Lucida Console',\n                            'Palatino Linotype',\n                            'Segoe UI',\n                            'Tahoma',\n                            'Times New Roman',\n                            'Trebuchet MS'\n                        ]\n                    }} onChange={this.handleChange}\n                />\n            </>\n        );\n    }\n}\n\nexport default WriteArticle;\n"]},"metadata":{},"sourceType":"module"}