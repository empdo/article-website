{"ast":null,"code":"var _jsxFileName = \"/Users/emilessung/dev/psy-website/src/components/common/DropDown.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DropDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showDropDown = this.showDropDown.bind(this);\n    this.hideDropDown = this.hideDropDown.bind(this);\n    this.state = {\n      shouldShow: false\n    };\n  }\n\n  showDropDown() {\n    this.setState({\n      shouldShow: true\n    }), () => {\n      document.addEventListener('click', this.hideDropDown);\n    };\n  }\n\n  hideDropDown() {\n    this.setState({\n      shouldShow: false\n    }), () => {\n      document.removeEventListener('click', this.showDropDown);\n    };\n  }\n\n  items() {\n    return this.props.options.map(option => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropDown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showDropDown,\n        children: \"Articles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), this.state.shouldShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DropDown;","map":{"version":3,"sources":["/Users/emilessung/dev/psy-website/src/components/common/DropDown.tsx"],"names":["React","DropDown","Component","constructor","props","showDropDown","bind","hideDropDown","state","shouldShow","setState","document","addEventListener","removeEventListener","items","options","map","option","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAWA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAqE;AACjEC,EAAAA,WAAW,CAACC,KAAD,EAAuB;AAC9B,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAEDJ,EAAAA,YAAY,GAAG;AACX,SAAKK,QAAL,CAAc;AAACD,MAAAA,UAAU,EAAG;AAAd,KAAd,GAAoC,MAAM;AACtCE,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKL,YAAxC;AACH,KAFD;AAGH;;AACDA,EAAAA,YAAY,GAAG;AACX,SAAKG,QAAL,CAAc;AAACD,MAAAA,UAAU,EAAG;AAAd,KAAd,GAAqC,MAAM;AACvCE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKR,YAA3C;AACH,KAFD;AAGH;;AAEDS,EAAAA,KAAK,GAAmB;AACpB,WAAO,KAAKV,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI;AACpC,0BACI;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,CAAP;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKb,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKG,KAAL,CAAWC,UAAX,gBACG;AAAA,kBACI,KAAKK;AADT;AAAA;AAAA;AAAA;AAAA,cADH,gBAGW,qCALhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAxCgE;;AA2CrE,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport ContentManager from '../../ContentManager'\n\nexport interface DropDownProps {\n   options : string[]; \n}\n \nexport interface DropDownState {\n   shouldShow: boolean; \n}\n \nclass DropDown extends React.Component<DropDownProps, DropDownState> {\n    constructor(props: DropDownProps) {\n        super(props);\n        this.showDropDown = this.showDropDown.bind(this);\n        this.hideDropDown = this.hideDropDown.bind(this);\n        this.state = {\n            shouldShow: false,\n        };\n    }\n\n    showDropDown() {\n        this.setState({shouldShow : true}), () => {\n            document.addEventListener('click', this.hideDropDown);\n        }\n    }\n    hideDropDown() {\n        this.setState({shouldShow : false}), () => {\n            document.removeEventListener('click', this.showDropDown);\n        }\n    }\n\n    items (): JSX.Element[] {\n        return this.props.options.map(option => {\n            return (\n                <div>{option}</div>\n            );\n        });\n    }\n\n    render() { \n        return (\n            <div className=\"dropDown-container\">\n                <button onClick={this.showDropDown}>Articles</button>\n                {this.state.shouldShow ? \n                   (<div>\n                       {this.items}\n                   </div>): <></>\n                }\n            </div>\n        );\n    }\n}\n \nexport default DropDown;"]},"metadata":{},"sourceType":"module"}