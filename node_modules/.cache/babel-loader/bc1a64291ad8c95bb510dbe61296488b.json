{"ast":null,"code":"var _jsxFileName = \"/Users/emilessung/dev/psy-website/src/components/common/DropDown.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DropDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showDropDown = this.showDropDown.bind(this);\n    this.hideDropDown = this.hideDropDown.bind(this);\n    this.state = {\n      shouldShow: false\n    };\n  }\n\n  showDropDown(e) {\n    e.preventDefault();\n    this.setState({\n      shouldShow: true\n    }, () => {\n      document.addEventListener('click', this.hideDropDown);\n      console.log(this.state.shouldShow);\n    });\n  }\n\n  hideDropDown() {\n    this.setState({\n      shouldShow: false\n    }, () => {\n      document.removeEventListener('click', this.closeMenu);\n    });\n  }\n\n  items() {\n    console.log(this.props.options);\n    return this.props.options.map(option => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropDown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showDropDown,\n        children: \"Articles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), this.state.shouldShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.items()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"hj\"\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DropDown;","map":{"version":3,"sources":["/Users/emilessung/dev/psy-website/src/components/common/DropDown.tsx"],"names":["React","DropDown","Component","constructor","props","showDropDown","bind","hideDropDown","state","shouldShow","e","preventDefault","setState","document","addEventListener","console","log","removeEventListener","closeMenu","items","options","map","option","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAUA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAqE;AACjEC,EAAAA,WAAW,CAACC,KAAD,EAAuB;AAC9B,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAEDJ,EAAAA,YAAY,CAACK,CAAD,EAAS;AACjBA,IAAAA,CAAC,CAACC,cAAF;AAEJ,SAAKC,QAAL,CAAc;AAAEH,MAAAA,UAAU,EAAE;AAAd,KAAd,EAAoC,MAAM;AACxCI,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKP,YAAxC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,UAAvB;AACD,KAHD;AAKC;;AACDF,EAAAA,YAAY,GAAG;AACf,SAAKK,QAAL,CAAc;AAAEH,MAAAA,UAAU,EAAE;AAAd,KAAd,EAAqC,MAAM;AACzCI,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsC,KAAKC,SAA3C;AACD,KAFD;AAGC;;AAEDC,EAAAA,KAAK,GAAkB;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWgB,OAAvB;AACA,WAAO,KAAKhB,KAAL,CAAWgB,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI;AACpC,0BAAO;AAAA,kBAAsBA;AAAtB,SAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKlB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKG,KAAL,CAAWC,UAAX,gBAAwB;AAAA,kBAAM,KAAKU,KAAL;AAAN;AAAA;AAAA;AAAA;AAAA,cAAxB,gBAAqD;AAAA;AAAA,uBAF1D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvCgE;;AA0CrE,eAAelB,QAAf","sourcesContent":["import React from 'react';\n\nexport interface DropDownProps {\n    options: string[];\n}\n\nexport interface DropDownState {\n    shouldShow: boolean;\n}\n\nclass DropDown extends React.Component<DropDownProps, DropDownState> {\n    constructor(props: DropDownProps) {\n        super(props);\n        this.showDropDown = this.showDropDown.bind(this);\n        this.hideDropDown = this.hideDropDown.bind(this);\n        this.state = {\n            shouldShow: false\n        };\n    }\n\n    showDropDown(e: any) {\n        e.preventDefault();\n        \n    this.setState({ shouldShow: true }, () => {\n      document.addEventListener('click', this.hideDropDown);\n      console.log(this.state.shouldShow);\n    });\n\n    }\n    hideDropDown() {\n    this.setState({ shouldShow: false }, () => {\n      document.removeEventListener('click', this.closeMenu);\n    });\n    }\n\n    items(): JSX.Element[] {\n        console.log(this.props.options);\n        return this.props.options.map(option => {\n            return <button key={option}>{option}</button>;\n        });\n    }\n\n    render() {\n        return (\n            <div className='dropDown-container'>\n                <button onClick={this.showDropDown}>Articles</button>\n                {this.state.shouldShow ? <div>{this.items()}</div>  : <>hj</>}\n            </div>\n        );\n    }\n}\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}