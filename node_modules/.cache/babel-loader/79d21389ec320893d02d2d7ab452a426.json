{"ast":null,"code":"var _jsxFileName = \"/Users/emilessung/dev/psy-website/src/components/common/AuthForm.tsx\";\nimport * as React from 'react';\nimport firebase from 'firebase/app';\nimport { withRouter } from 'react-router';\nimport 'firebase/auth';\nimport { Link } from 'react-router-dom';\nimport \"./AuthForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Actions;\n\n(function (Actions) {\n  Actions[\"signUp\"] = \"sign up\";\n  Actions[\"signIn\"] = \"sign in\";\n})(Actions || (Actions = {}));\n\nclass AuthForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.googleAuth = this.googleAuth.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  googleAuth() {\n    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          firebase.auth().signInWithPopup(googleAuthProvider);\n          this.props.history.push('/');\n        },\n        children: \"Sign in with google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n  async handleSubmit(e) {\n    // Stops form from reloading page on submit\n    e.preventDefault();\n    e.currentTarget.reset();\n    const firebaseAuth = firebase.auth();\n    let user;\n\n    try {\n      switch (this.props.action) {\n        case Actions.signIn:\n          user = await firebaseAuth.signInWithEmailAndPassword(this.state.email, this.state.password);\n          break;\n\n        case Actions.signUp:\n          user = await firebaseAuth.createUserWithEmailAndPassword(this.state.email, this.state.password);\n          break;\n      }\n    } catch (error) {\n      switch (error.code) {\n        case 'auth/wrong-password':\n          this.setState({\n            errorMsg: 'Incorrect password. Try again.'\n          });\n          break;\n\n        case 'auth/user-not-found':\n          this.setState({\n            errorMsg: 'Incorrect email. Try again.'\n          });\n          break;\n\n        case 'auth/email-already-in-use':\n          this.setState({\n            errorMsg: 'Email already in use. Try again.'\n          });\n          break;\n\n        default:\n          this.setState({\n            errorMsg: error.message\n          });\n          break;\n      }\n\n      console.error(error);\n      return;\n    }\n\n    this.setState({\n      errorMsg: undefined\n    });\n    alert(`Welcome ${this.props.action === Actions.signUp ? this.state.email : 'back'}!`);\n    console.log('user', user);\n    this.props.history.push('/');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [this.props.action === Actions.signIn && /*#__PURE__*/_jsxDEV(this.googleAuth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => this.setState({\n            email: e.currentTarget.value\n          }),\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => this.setState({\n            password: e.currentTarget.value\n          }),\n          placeholder: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: this.props.action\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: this.state.errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), this.props.action === Actions.signIn && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account yet? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), this.props.action === Actions.signUp && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(AuthForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/emilessung/dev/psy-website/src/components/common/AuthForm.tsx"],"names":["React","firebase","withRouter","Link","Actions","AuthForm","Component","constructor","props","handleSubmit","bind","googleAuth","state","email","password","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","history","push","e","preventDefault","currentTarget","reset","firebaseAuth","user","action","signIn","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","error","code","setState","errorMsg","message","console","undefined","alert","log","render","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport firebase from 'firebase/app';\nimport {RouteComponentProps, withRouter} from 'react-router';\nimport 'firebase/auth';\nimport {Link} from 'react-router-dom';\nimport \"./AuthForm.scss\";\n\nexport interface AuthFormProps extends RouteComponentProps {\n    action: Actions;\n}\n\nexport enum Actions {\n    signUp = 'sign up',\n    signIn = 'sign in'\n}\n\nexport interface AuthFormState {\n    password: string;\n    email: string;\n    errorMsg?: string;\n}\n\nclass AuthForm extends React.Component<AuthFormProps, AuthFormState> {\n    constructor(props: AuthFormProps) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.googleAuth = this.googleAuth.bind(this);\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    googleAuth(): JSX.Element {\n        const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n        return (\n            <div>\n                <button\n                    onClick={() => {\n                        firebase.auth().signInWithPopup(googleAuthProvider);\n                        this.props.history.push('/');\n                    }}>\n                    Sign in with google\n                </button>\n            </div>\n        );\n    }\n\n    async handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n        // Stops form from reloading page on submit\n        e.preventDefault();\n        e.currentTarget.reset();\n\n        const firebaseAuth = firebase.auth();\n        let user: firebase.auth.UserCredential | undefined;\n        try {\n            switch (this.props.action) {\n                case Actions.signIn:\n                    user = await firebaseAuth.signInWithEmailAndPassword(this.state.email, this.state.password);\n                    break;\n                case Actions.signUp:\n                    user = await firebaseAuth.createUserWithEmailAndPassword(this.state.email, this.state.password);\n                    break;\n            }\n        } catch (error) {\n            switch (error.code) {\n                case 'auth/wrong-password':\n                    this.setState({errorMsg: 'Incorrect password. Try again.'});\n                    break;\n\n                case 'auth/user-not-found':\n                    this.setState({errorMsg: 'Incorrect email. Try again.'});\n                    break;\n                case 'auth/email-already-in-use':\n                    this.setState({errorMsg: 'Email already in use. Try again.'});\n                    break;\n                default:\n                    this.setState({errorMsg: error.message});\n                    break;\n            }\n\n            console.error(error);\n            return;\n        }\n\n        this.setState({errorMsg: undefined});\n        alert(`Welcome ${this.props.action === Actions.signUp ? this.state.email : 'back'}!`);\n        console.log('user', user);\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                {this.props.action === Actions.signIn && <this.googleAuth />}\n                <form onSubmit={this.handleSubmit}>\n                    <input onChange={e => this.setState({email: e.currentTarget.value})} placeholder='email' />\n                    <input\n                        onChange={e => this.setState({password: e.currentTarget.value})}\n                        placeholder='Password'\n                        type='password'\n                    />\n                    <button type='submit'>{this.props.action}</button>\n                    <span className='error'>{this.state.errorMsg}</span>\n\n                    {this.props.action === Actions.signIn && (\n                        <p>\n                            Don't have an account yet? <Link to='/signup'>Sign up</Link>\n                        </p>\n                    )}\n                    {this.props.action === Actions.signUp && (\n                        <p>\n                            Already have an account? <Link to='/login'>Log in</Link>\n                        </p>\n                    )}\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AuthForm);\n"]},"metadata":{},"sourceType":"module"}