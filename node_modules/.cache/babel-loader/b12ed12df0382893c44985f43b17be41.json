{"ast":null,"code":"var _jsxFileName = \"/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx\";\nimport * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager';\nimport DropDown from '../../common/DropDown';\nimport Loading from '../../common/Loading';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\nimport SunEditor from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\n\nimport { align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link } from 'suneditor/src/plugins';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WriteArticle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editorRef = /*#__PURE__*/React.createRef();\n\n    this.getSunEditorInstance = sunEditor => {\n      this.editorRef.current = sunEditor;\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleContent = this.handleContent.bind(this);\n    this.saveArticle = this.saveArticle.bind(this);\n    this.changeDescription = this.changeDescription.bind(this);\n    this.changeTitle = this.changeTitle.bind(this);\n    this.state = {\n      articleTitles: [],\n      currentArticle: {}\n    };\n  } // static getDerivedStateFromProps(nextProps: WriteArticleProps, prevState: WriteArticleState): WriteArticleState {\n  //     return {\n  //         ...prevState,\n  //         articleTitles: contentManager.articles.map(article => article.title),\n  //         currentArticle: contentManager.articles.find(article => article.id === nextProps.match.params.id) || {}\n  //     };\n  // }\n\n\n  handleChange(content) {\n    console.log('OnChange: ', content);\n  }\n\n  handleContent() {\n    var _this$editorRef$curre;\n\n    console.log(this.props.match.params.id);\n    this.setState({\n      articleTitles: contentManager.articles.map(article => article.title),\n      currentArticle: contentManager.articles.find(article => article.id === this.props.match.params.id) || {}\n    });\n    (_this$editorRef$curre = this.editorRef.current) === null || _this$editorRef$curre === void 0 ? void 0 : _this$editorRef$curre.setContents(this.state.currentArticle.data || '');\n  }\n\n  updatePublish() {}\n\n  saveArticle(e) {\n    var _this$editorRef$curre2;\n\n    e.preventDefault();\n    let currentArticle = this.state.currentArticle;\n    let content = ((_this$editorRef$curre2 = this.editorRef.current) === null || _this$editorRef$curre2 === void 0 ? void 0 : _this$editorRef$curre2.getContents(true)) || '';\n\n    if (currentArticle) {\n      if (currentArticle.id) {\n        contentManager.modifyArticle(currentArticle.id, currentArticle.description || '', currentArticle.title || '', content);\n      } else {\n        contentManager.createArticle(currentArticle.description || '', currentArticle.title || '', content);\n      }\n    }\n  }\n\n  changeTitle(e) {\n    if (this.state.currentArticle) {\n      this.setState({\n        currentArticle: { ...this.state.currentArticle,\n          description: e.target.value\n        }\n      });\n    }\n  }\n\n  changeDescription(e) {\n    if (this.state.currentArticle) {\n      this.setState({\n        currentArticle: { ...this.state.currentArticle,\n          description: e.target.value\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    contentManager.addListener('article', this.handleContent);\n  }\n\n  componentWillUnmount() {\n    contentManager.removeListener('article', this.handleContent);\n  }\n\n  render() {\n    var _this$state$currentAr;\n\n    let showEditor = (!!this.state.currentArticle || !this.props.match.params.id) && contentManager.authenticated;\n\n    if (!contentManager.isAdmin && showEditor) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Access denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Only admins can write new articles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n\n    let dropDownItems = contentManager.articles.map(article => ({\n      text: article.title,\n      callback: async () => {\n        await this.props.history.push('/write/' + article.id);\n        this.handleContent();\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showEditor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            await this.props.history.push('/write');\n            this.handleContent();\n          },\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          options: dropDownItems,\n          children: \"Modify existing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            defaultValue: this.state.currentArticle.title,\n            onChange: this.changeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            defaultValue: this.state.currentArticle.description,\n            onChange: this.changeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"hidden\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"hidden\",\n              type: \"checkBox\",\n              onChange: this.updatePublish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.saveArticle,\n            children: \"Save draft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SunEditor, {\n          autoFocus: true,\n          lang: \"en\",\n          setOptions: {\n            showPathLabel: false,\n            minHeight: '50vh',\n            maxHeight: '50vh',\n            placeholder: 'Your text here',\n            plugins: [align, font, fontColor, fontSize, formatBlock, hiliteColor, horizontalRule, lineHeight, list, paragraphStyle, table, template, textStyle, image, link],\n            buttonList: [['undo', 'redo'], ['font', 'fontSize', 'formatBlock'], ['paragraphStyle'], ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'], ['fontColor', 'hiliteColor'], ['removeFormat'], '/', // Line break\n            ['outdent', 'indent'], ['align', 'horizontalRule', 'list', 'lineHeight'], ['table', 'link', 'image']],\n            formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n            font: ['Arial', 'Calibri', 'Comic Sans', 'Courier', 'Garamond', 'Georgia', 'Impact', 'Lucida Console', 'Palatino Linotype', 'Segoe UI', 'Tahoma', 'Times New Roman', 'Trebuchet MS']\n          },\n          onChange: this.handleChange,\n          getSunEditorInstance: this.getSunEditorInstance //                    defaultValue= {this.currentArticle ? this.currentArticle.data : \"<p>Your text here...</p>\"}\n          ,\n          defaultValue: (_this$state$currentAr = this.state.currentArticle) === null || _this$state$currentAr === void 0 ? void 0 : _this$state$currentAr.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default WriteArticle;","map":{"version":3,"sources":["/Users/emilessung/dev/psy-website/src/components/article/write/WriteArticle.tsx"],"names":["React","contentManager","DropDown","Loading","SunEditor","align","font","fontColor","fontSize","formatBlock","hiliteColor","horizontalRule","lineHeight","list","paragraphStyle","table","template","textStyle","image","link","WriteArticle","Component","constructor","props","editorRef","createRef","getSunEditorInstance","sunEditor","current","componentDidMount","bind","handleContent","saveArticle","changeDescription","changeTitle","state","articleTitles","currentArticle","handleChange","content","console","log","match","params","id","setState","articles","map","article","title","find","setContents","data","updatePublish","e","preventDefault","getContents","modifyArticle","description","createArticle","target","value","addListener","componentWillUnmount","removeListener","render","showEditor","authenticated","isAdmin","dropDownItems","text","callback","history","push","showPathLabel","minHeight","maxHeight","placeholder","plugins","buttonList","formats"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport 'tinymce/tinymce';\nimport contentManager from '../../../ContentManager';\nimport DropDown, {DropDownItem} from '../../common/DropDown';\nimport {Article} from '../../../interfaces';\nimport Loading from '../../common/Loading';\nimport {RouteComponentProps} from 'react-router-dom';\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n// import {EditorState} from 'draft-js';\n\nimport SunEditor from 'suneditor-react';\nimport SunEditorCore from 'suneditor/src/lib/core';\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\nimport {\n    align,\n    font,\n    fontColor,\n    fontSize,\n    formatBlock,\n    hiliteColor,\n    horizontalRule,\n    lineHeight,\n    list,\n    paragraphStyle,\n    table,\n    template,\n    textStyle,\n    image,\n    link\n} from 'suneditor/src/plugins';\n\nexport interface WriteArticlePropsMatchParams {\n    id?: string;\n}\n\nexport interface WriteArticleProps extends RouteComponentProps<WriteArticlePropsMatchParams> {}\n\nexport interface WriteArticleState {\n    articleTitles: string[];\n    currentArticle: Partial<Article>;\n}\n\nclass WriteArticle extends React.Component<WriteArticleProps, WriteArticleState> {\n    editorRef: React.RefObject<SunEditorCore | null> = React.createRef();\n\n    constructor(props: WriteArticleProps) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.handleContent = this.handleContent.bind(this);\n        this.saveArticle = this.saveArticle.bind(this);\n        this.changeDescription = this.changeDescription.bind(this);\n        this.changeTitle = this.changeTitle.bind(this);\n        this.state = {\n            articleTitles: [],\n            currentArticle: {}\n        };\n    }\n\n    // static getDerivedStateFromProps(nextProps: WriteArticleProps, prevState: WriteArticleState): WriteArticleState {\n    //     return {\n    //         ...prevState,\n    //         articleTitles: contentManager.articles.map(article => article.title),\n    //         currentArticle: contentManager.articles.find(article => article.id === nextProps.match.params.id) || {}\n    //     };\n    // }\n\n    getSunEditorInstance = (sunEditor: SunEditorCore) => {\n        this.editorRef.current = sunEditor;\n    };\n\n    handleChange(content: string) {\n        console.log('OnChange: ', content);\n    }\n\n    handleContent() {\n        console.log(this.props.match.params.id);\n        this.setState({\n            articleTitles: contentManager.articles.map(article => article.title),\n            currentArticle: contentManager.articles.find(article => article.id === this.props.match.params.id) || {}\n        });\n\n        this.editorRef.current?.setContents(this.state.currentArticle.data || '');\n    }\n\n    updatePublish() {}\n\n    saveArticle(e: React.FormEvent) {\n        e.preventDefault();\n\n        let currentArticle = this.state.currentArticle;\n        let content = this.editorRef.current?.getContents(true) || '';\n        if (currentArticle) {\n            if (currentArticle.id) {\n                contentManager.modifyArticle(\n                    currentArticle.id,\n                    currentArticle.description || '',\n                    currentArticle.title || '',\n                    content\n                );\n            } else {\n                contentManager.createArticle(currentArticle.description || '', currentArticle.title || '', content);\n            }\n        }\n    }\n\n    changeTitle(e: React.ChangeEvent<HTMLInputElement>) {\n        if (this.state.currentArticle) {\n            this.setState({currentArticle: {...this.state.currentArticle, description: e.target.value}});\n        }\n    }\n\n    changeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n        if (this.state.currentArticle) {\n            this.setState({currentArticle: {...this.state.currentArticle, description: e.target.value}});\n        }\n    }\n\n    componentDidMount() {\n        contentManager.addListener('article', this.handleContent);\n    }\n\n    componentWillUnmount() {\n        contentManager.removeListener('article', this.handleContent);\n    }\n    render() {\n        let showEditor: boolean =\n            (!!this.state.currentArticle || !this.props.match.params.id) && contentManager.authenticated;\n\n        if (!contentManager.isAdmin && showEditor) {\n            return (\n                <>\n                    <h1>Access denied</h1>\n                    <p>Only admins can write new articles</p>\n                </>\n            );\n        }\n\n        let dropDownItems: DropDownItem[] = contentManager.articles.map(article => ({\n            text: article.title,\n            callback: async () => {\n                await this.props.history.push('/write/' + article.id);\n                this.handleContent();\n            }\n        }));\n\n        return (\n            <>\n                {showEditor ? (\n                    <>\n                        <button onClick={\n                            async () => {\n                                await this.props.history.push('/write');\n                                this.handleContent();\n                            }\n                        }>New</button>\n                        <DropDown options={dropDownItems}>Modify existing</DropDown>\n                        <form>\n                            <input\n                                type='text'\n                                placeholder='Title'\n                                defaultValue={this.state.currentArticle.title}\n                                onChange={this.changeTitle}\n                            />\n                            <input\n                                type='text'\n                                placeholder='Description'\n                                defaultValue={this.state.currentArticle.description}\n                                onChange={this.changeDescription}\n                            />\n                            <label>\n                                hidden\n                                <input name='hidden' type='checkBox' onChange={this.updatePublish} />\n                            </label>\n\n                            <button onClick={this.saveArticle}>Save draft</button>\n                            <button>Publish</button>\n                        </form>\n                        <SunEditor\n                            autoFocus={true}\n                            lang='en'\n                            setOptions={{\n                                showPathLabel: false,\n                                minHeight: '50vh',\n                                maxHeight: '50vh',\n                                placeholder: 'Your text here',\n                                plugins: [\n                                    align,\n                                    font,\n                                    fontColor,\n                                    fontSize,\n                                    formatBlock,\n                                    hiliteColor,\n                                    horizontalRule,\n                                    lineHeight,\n                                    list,\n                                    paragraphStyle,\n                                    table,\n                                    template,\n                                    textStyle,\n                                    image,\n                                    link\n                                ],\n                                buttonList: [\n                                    ['undo', 'redo'],\n                                    ['font', 'fontSize', 'formatBlock'],\n                                    ['paragraphStyle'],\n                                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n                                    ['fontColor', 'hiliteColor'],\n                                    ['removeFormat'],\n                                    '/', // Line break\n                                    ['outdent', 'indent'],\n                                    ['align', 'horizontalRule', 'list', 'lineHeight'],\n                                    ['table', 'link', 'image']\n                                ],\n                                formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n                                font: [\n                                    'Arial',\n                                    'Calibri',\n                                    'Comic Sans',\n                                    'Courier',\n                                    'Garamond',\n                                    'Georgia',\n                                    'Impact',\n                                    'Lucida Console',\n                                    'Palatino Linotype',\n                                    'Segoe UI',\n                                    'Tahoma',\n                                    'Times New Roman',\n                                    'Trebuchet MS'\n                                ]\n                            }}\n                            onChange={this.handleChange}\n                            getSunEditorInstance={this.getSunEditorInstance}\n                            //                    defaultValue= {this.currentArticle ? this.currentArticle.data : \"<p>Your text here...</p>\"}\n                            defaultValue={this.state.currentArticle?.data}\n                        />\n                    </>\n                ) : (\n                    <Loading />\n                )}\n            </>\n        );\n    }\n}\n\nexport default WriteArticle;\n"]},"metadata":{},"sourceType":"module"}